# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""
print("TASK 7.1: List all subclasses of \"Person\" with RDFLib and SPARQL\n")

ns = Namespace("http://somewhere#")

# RDFLib
print("RDFLib:")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s)

# SPARQL
print("\nSPARQL:")
from rdflib.plugins.sparql import prepareQuery

q = prepareQuery('''
  SELECT 
    ?Subject
  WHERE { 
    ?Subject rdfs:subClassOf ns:Person. 
  }
  ''',
  initNs = { "rdfs": RDFS, "ns" : ns}
)

for r in g.query(q):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""
print("\nTASK 7.2: List all individuals of \"Person\" with RDFLib and SPARQL (remember the subClasses)\n")

ns = Namespace("http://somewhere#")

# RDFLib
print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
    print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for i,j,k in g.triples((None, RDF.type, s)):
        print(i)

# SPARQL
print("\nSPARQL:")
from rdflib.plugins.sparql import prepareQuery

q = prepareQuery('''
  SELECT 
    ?Subject
  WHERE { 
    {?Subject rdf:type ns:Person.} 
    UNION {
      ?Subject rdf:type ?x.
      ?x rdfs:subClassOf ns:Person.
    }
  }
  ''',
  initNs = { "rdf": RDF, "rdfs": RDFS, "ns" : ns}
)

for r in g.query(q):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""
print("\nTASK 7.3: List all individuals of \"Person\" and all their properties including their class with RDFLib and SPARQL\n")

ns = Namespace("http://somewhere#")

# RDFLib
print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
    for i,j,k in g.triples((s, None, None)):
        print(i,j,k)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for i,j,k in g.triples((None, RDF.type, s)):
            for a,b,c in g.triples((i, None, None)):
                print(a,b,c)

# SPARQL
print("\nSPARQL:")
from rdflib.plugins.sparql import prepareQuery

q = prepareQuery('''
  SELECT 
    ?Subject ?props
  WHERE { 
    {?Subject rdf:type ns:Person.
     ?Subject ?props ?x.} 
    UNION {
      ?Subject rdf:type ?y.
      ?y rdfs:subClassOf ns:Person.
      ?Subject ?props ?x.
    }
  }
  ''',
  initNs = { "rdf": RDF, "ns" : ns}
)

for r in g.query(q):
  print(r)

