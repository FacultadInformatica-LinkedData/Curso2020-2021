# -*- coding: utf-8 -*-
"""Task07.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE
**Task 07: Querying RDF(s)**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse("../resources/example6.rdf", format="xml")

ns = Namespace('http://somewhere#')

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s)

q1 = prepareQuery('''
  SELECT 
    ?x
  WHERE { 
    ?x rdfs:subClassOf ns:Person. 
  }
  ''',
  initNs = { "ns": ns, "rdfs":RDFS}
)

for r in g.query(q1):
  print(r)


"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""
for s,p,o in g.triples((None, RDF.type, ns.Person)):
    print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s2,p2,o2 in g.triples((None,RDF.type,s)):
        print(s2)

q2 = prepareQuery('''
  SELECT 
    ?x
  WHERE { 
    ?x rdf:type ?type.
    ?type rdfs:subClassOf* ns:Person.
  }
  ''',
  initNs = { "ns": ns, "rdf":RDF,"rdfs":RDFS}
)

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""
print('RDFLib:')
for s,p,o in g.triples((None, RDF.type, ns.Person)):
    for s2,p2,o2 in g.triples((s,None,None)):
      print(s2,p2,o2)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s2,p2,o2 in g.triples((None,RDF.type,s)):
       for s3,p3,o3 in g.triples((s2,None,None)):
         print(s3,p3,o3)

q3 = prepareQuery('''
  SELECT 
    ?s ?p ?o
  WHERE { 
    ?s rdf:type ?type.
    ?type rdfs:subClassOf* ns:Person.
    ?s ?p ?o.
  }
  ''',
  initNs = {"ns": ns, "rdf":RDF,"rdfs":RDFS}
)
print('SPARQL:')
for r in g.query(q3):
  print(r)