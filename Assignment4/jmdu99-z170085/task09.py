# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aA_7cDJnS46kKnLS5uuCGN5_s3QANqk-

**Task 09: Data linking**
"""

# !pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.namespace import OWL,RDF
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"resources/data03.rdf", format="xml")
g2.parse(github_storage+"resources/data04.rdf", format="xml")

three = Namespace("http://data.three.org#")
four = Namespace("http://data.four.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

from rdflib.plugins.sparql import prepareQuery

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""
'''
# Para ver el grafo 1 inicialmente
print("\nGrafo 1: ")
for s, p, o in g1:
  print(s,p,o)
  
# Para ver el grafo 2 inicialmente
print("\nGrafo 2: ")
for s, p, o in g2:
  print(s,p,o)
  
  
# Para ver el grafo 3 inicialmente
print("\nGrafo 3 vacio: ")
for s, p, o in g3:
  print(s,p,o)
'''

print("\nIndividuos en el primer grafo con su apodo y nombre de familia: ")

q1 = prepareQuery('''
  SELECT 
    ?Subject ?Given ?FN
  WHERE { 
    ?Subject rdf:type ns:Person.
    ?Subject vcard:Given ?Given.
    ?Subject vcard:FN    ?FN
  }
  ''',
  initNs = { "ns": three, "rdf": RDF, "vcard": vcard}
  )
individuos1=[]
for r in g1.query(q1):
  individuos1.append(r)
  print(r)

print("\nIndividuos en el segundo grafo con su apodo y nombre de familia: ")
q2 = prepareQuery('''
  SELECT 
    ?Subject ?Given ?FN
  WHERE { 
    ?Subject rdf:type ns:Person.
    ?Subject vcard:Given ?Given.
    ?Subject vcard:FN    ?FN
  }
  ''',
  initNs = { "ns": four, "rdf": RDF, "vcard": vcard}
  )
individuos2=[]
for r in g2.query(q2):
  individuos2.append(r)
  print(r)
  
for fila1 in individuos1:
    for fila2 in individuos2:
        if(fila1.Given == fila2.Given and fila1.FN == fila2.FN):
            triple = (fila1.Subject,OWL.sameAs,fila2.Subject)
            g3.add(triple)

print("\nGrafo 3 completo: ")
for s, p, o in g3:
  print(s,p,o)